name: Build Godot Project

on:
  push: {} # Runs on all Push
  pull_request: {} # Runs on all Pull-Request

jobs:
  Godot:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        platform: [ChoukaBara-Windows] #, ChoukaBara-HTML5
    steps:
      - uses: actions/checkout@v2
        with:
          lfs: true

      - name: Build
        id: build
        uses: josephbmanley/build-godot-action@v1.4.0
        with:
          name: ChoukaBara
          preset: ${{ matrix.platform }}
          debugMode: "true"
          projectDir: "./ChoukaBaraGame/"
          subdirectory: ${{ matrix.platform }}
          package: "true"

      - name: Upload Artifact to Build
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.platform }}
          path: ${{ github.workspace }}/${{ steps.build.outputs.build }}

      - name: Extract Change Logs
        id: extract-release-notes
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1

      - name: Get Previous Release tag
        id: previous-tag
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft"
          view_top: 1

      - name: Format Tag Name
        id: formated-release-tag
        run: formatedTag = "${{ steps.previous-tag.outputs.tag_name }}" | cut -d'v' -f 2
        env:
          formated-tag: $formatedTag

      - name: Bump release version
        id: bump-version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ env.formated-tag }}
          version-fragment: 'bug' # Change here to Update release version in future Possible options are [ major | feature | bug | alpha | beta | rc ] version Format: major.feature.bug-alpha|beta|rc

      - name: Create Pre-Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.bump-version.outputs.next-version }}
          release_name: Release ${{ steps.bump-version.outputs.next-version }}
          body: |
            Changes in this Release
              ${{ steps.extract-release-notes.outputs.changelog }}
          draft: false
          prerelease: true # Change here to make prerelease as the actual release 

      - name: Upload Pre-Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_pre-release.outputs.upload_url }} 
          asset_path: ${{ steps.build.outputs.artifact }}
          asset_name: ${{ matrix.platform }}.zip
          asset_content_type: application/zip