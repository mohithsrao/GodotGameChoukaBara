name: Godot Project Export and Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

env:
  GODOT_VERSION: 3.2.3
  EXPORT_NAME: Chouka-Bara

jobs:
  export-windows:
    name: Windows Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Windows Build
        run: |
          mkdir -v -p build/windows/$EXPORT_NAME
          cd build/windows/$EXPORT_NAME
          godot -v --export "ChoukaBara-Windows" ../build/windows/$EXPORT_NAME.exe
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: windows.zip
          path: build/windows
  
  export-web:
    name: Web Export
    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:3.2.3
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          lfs: true
      
      - name: Change Base Directory
        run: |
          echo $(pwd)
          cd ./ChoukaBaraGame
          echo $(pwd)

      - name: Setup
        run: |
          mkdir -v -p ~/.local/share/godot/templates
          mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable ~/.local/share/godot/templates/${GODOT_VERSION}.stable
      - name: Web Build
        run: |
          mkdir -v -p build/web/$EXPORT_NAME
          cd build/web/$EXPORT_NAME
          godot -v --export "ChoukaBara-HTML5" ../build/web/index.html
      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: web.zip
          path: build/web
      # Installing rsync is needed in order to deploy to GitHub Pages. Without it, the build will fail.
      - name: Install rsync
        run: |
          apt-get update && apt-get install -y rsync
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@releases/v3
        with:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BRANCH: gh-pages # The branch the action should deploy to.
          FOLDER: build/web # The folder the action should deploy.

  Release:
    runs-on: ubuntu-latest
    needs: [export-windows,export-web]
    steps: 
      - name: Extract Change Logs
        id: extract-release-notes
        uses: heinrichreimer/github-changelog-generator-action@v2.1.1
        with: 
          token: ${{ secrets.GITHUB_TOKEN }}
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          filterByMilestone: true
          author: true
            
      - name: Get Previous Release tag
        id: previous-tag
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "draft"
          view_top: 1

      - name: Format Tag Name
        id: formated-release-tag
        run: |
          echo ::set-output name=formated-tag::$(echo ${{ steps.previous-tag.outputs.tag_name }} | cut -d'v' -f 2)
        
      - name: Bump release version
        id: bump-version
        uses: christian-draeger/increment-semantic-version@1.0.2
        with:
          current-version: ${{ steps.formated-release-tag.outputs.formated-tag }}
          version-fragment: 'feature' # Change here to Update release version in future Possible options are [ major | feature | bug | alpha | beta | rc ] version Format: major.feature.bug-alpha|beta|rc

      - name: Download HTML Build Artifacts
        id: downloaded-html-artifacts
        uses: actions/download-artifact@v2
        with:
          name: web.zip
          path: ~/artifacts/html

      - name: Download Windows Build Artifacts
        id: downloaded-windows-artifacts
        uses: actions/download-artifact@v2
        with:
          name: windows.zip
          path: ~/artifacts/windows

      - name: Create Release
        id: create-release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.bump-version.outputs.next-version }}
          release_name: Release ${{ steps.bump-version.outputs.next-version }}
          body: |
            Changes in this Release
              ${{ steps.extract-release-notes.outputs.changelog }}
          draft: false
          prerelease: false 

      - name: Upload Pre-Release Windows Asset
        id: upload-windows-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} 
          asset_path: ${{ steps.downloaded-windows-artifacts.outputs.download-path }}/windows.zip
          asset_name: chouka-bara-windows.zip
          asset_content_type: application/zip

      - name: Upload Pre-Release HTML5 Asset
        id: upload-html-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create-release.outputs.upload_url }} 
          asset_path: ${{ steps.downloaded-html-artifacts.outputs.download-path }}/web.zip
          asset_name: chouka-bara-html.zip
          asset_content_type: application/zip